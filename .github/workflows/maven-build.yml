name: Maven Build

on:
  push:
    branches: 
      - '*'         # This runs on all branches for the build job
      - 'master'    # Explicitly include master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
    
    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
    
    - name: Install dependencies (skip tests)
      run: ./mvnw clean install -DskipTests
    
    - name: Run unit tests
      run: ./mvnw test
      
    - name: Run architecture tests
      run: ./mvnw test -pl eladmin-system -Dtest=com.srr.architecture.*Test -Dmaven.repo.local=$HOME/.m2/repository
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/target/surefire-reports/
          **/target/site/jacoco/

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [build, test]

    steps:
    - uses: actions/checkout@v3
    
    - name: Install expect
      run: sudo apt-get install -y expect
        
    - name: Deploy using expect script
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        # Create an expect script to handle interactive password prompts
        cat > deploy.exp << 'EOF'
        #!/usr/bin/expect -f
        
        # Get password from environment
        set password $env(SSH_PASSWORD)
        set timeout 300
        
        # Start SSH session
        spawn ssh -o StrictHostKeyChecking=no root@172.235.32.135
        
        # Handle the password prompt
        expect {
          "Password:" {
            send "$password\r"
            exp_continue
          }
          "password:" {
            send "$password\r"
            exp_continue
          }
          "*#" {
            # We have a root prompt, continue
          }
        }
        
        # Run deployment commands
        send "cd backend\r"
        expect "*#"
        send "export PROFILE=prod\r"
        expect "*#"
        send "pkill -f 'java -jar' || true\r"
        expect "*#"
        send "git checkout master\r"
        expect "*#"
        send "git pull origin master\r"
        expect "*#"
        send "./mvnw clean package\r"
        expect "*#"
        send "nohup java -jar eladmin-system/target/eladmin-system-2.7.jar > app.log 2>&1 &\r"
        expect "*#"
        send "exit\r"
        expect eof
        EOF
        
        # Make script executable
        chmod +x deploy.exp
        
        # Run the expect script
        ./deploy.exp
